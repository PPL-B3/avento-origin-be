name: Deploy NestJS App with Docker Compose

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Chekout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest .
    
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Chekout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set deployment environment variables
        id: deploy-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "REMOTE_SERVER=${{ secrets.PROD_SERVER }}" >> $GITHUB_ENV
            echo "REMOTE_USER=${{ secrets.PROD_USER }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            echo "REMOTE_SERVER=${{ secrets.PROD_SERVER }}" >> $GITHUB_ENV
            echo "REMOTE_USER=${{ secrets.PROD_USER }}" >> $GITHUB_ENV
          fi
     
      - name: Set docker-compose environment variables
        run: |
          cat << EOF > .env
            POSTGRES_USER=${{ secrets.DB_USER }}
            POSTGRES_PASSWORD=${{ secrets.DB_PASS }}
            POSTGRES_DB=${{ secrets.DB_DB }}
            POSTGRES_HOST=${{ secrets.DB_HOST }}
            POSTGRES_PORT=${{ secrets.DB_PORT }}
            DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_DB }}?schema=public
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
          EOF
      
      - name: Set up ssh key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
    
      - name: Deploy
        run: |
          export DOCKER_HOST="ssh://${{ env.REMOTE_USER }}@${{ env.REMOTE_SERVER }}"
          docker info
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
          docker system prune -af
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
